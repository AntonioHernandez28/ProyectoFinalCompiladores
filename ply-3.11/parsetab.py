
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMILLA COMMA COMPARE CTEC CTEF CTEI CTESTRING DIV DO ELSE END EQUALS FIND FLOAT FOR FROM FUNCTION GT GTE ID IF INT LBRACKET LCURLY LPAREN LT LTE MEAN MEDIA MINUS MODA MODE MUL NE OR PLOT PLOTXY PLUS PRINCIPAL PROGRAM RBRACKET RCURLY READ RETURN RPAREN SEMMICOLON SIMPLEREGRESSION SORT THEN TO TWOPOINTS VARIANCE VARIANZA VARS VOID WHILE WRITE\n    program : PROGRAM ID SEMMICOLON addProgram program1 \n    \n    addProgram :\n    \n    program1 : vars mainQuad functions mainEnd program2\n            | vars mainQuad functions \n            | program2\n    \n    program2 : principal\n    \n    principal : PRINCIPAL saveFunction LPAREN RPAREN LCURLY vars statements RCURLY \n    \n    mainQuad : \n    \n    mainEnd : \n    \n    statements : assign SEMMICOLON statements \n        | functionCall SEMMICOLON statements \n        | read statements SEMMICOLON statements\n        | write statements SEMMICOLON statements \n        | for statements \n        | while statements \n        | if statements \n        | return SEMMICOLON statements \n        | sort statements SEMMICOLON statements \n        | plot statements SEMMICOLON statements\n        | empty\n    \n    assign : ID add_id2 EQUALS saveOperator exp generateAssignQuad\n            | ID arrStatement EQUALS saveOperator exp generateAssignQuad\n            | ID add_id2 EQUALS saveOperator functionCall generateAssignQuad\n            | ID add_id2 EQUALS saveOperator mean generateAssignQuad\n            | ID add_id2 EQUALS saveOperator find generateAssignQuad\n            | ID add_id2 EQUALS saveOperator mode generateAssignQuad\n            | ID add_id2 EQUALS saveOperator variance generateAssignQuad\n    generateAssignQuad :  add_id :  add_id2 :  add_id3 : \n    media : MEDIA LPAREN arr RPAREN SEMMICOLON\n    \n    functionCall : ID validateFunctionID functionERA LPAREN expAux verifyParams RPAREN generateQuadGOSUB \n    \n    validateFunctionID : \n    \n    verifyParams :\n    \n    paramsCount : \n    \n    generateQuadPARAM : \n    \n    expAux : exp generateQuadPARAM paramsCount\n           | exp generateQuadPARAM COMMA paramsCount expAux \n           | empty  \n    \n    generateQuadGOSUB :\n    \n    fillEndProc : \n    \n    functionERA : \n    \n    read : READ operatorRead LPAREN paramReadAux RPAREN \n    \n    paramRead : paramReadAux \n              | empty \n    \n    paramReadAux : exp generateQuadREAD \n                 | exp generateQuadREAD COMMA operatorRead paramReadAux \n    \n    operatorRead : \n    \n    generateQuadREAD : \n    \n    write : WRITE writeOperator LPAREN paramWrite RPAREN\n    \n    paramWrite : paramWriteAux \n               | empty \n    \n    paramWriteAux : exp generateQuadPRINT \n                  | exp generateQuadPRINT COMMA writeOperator paramWriteAux \n    \n    writeOperator : \n    \n    generateQuadPRINT :\n    \n    sort : SORT sortOperator LPAREN ID add_id2 verifyArray  RPAREN generateQuadSORT \n    \n    sortOperator : \n    verifyArray : \n    generateQuadSORT : \n    \n    find : FIND findOperator LPAREN ID add_id2 verifyArray COMMA ID add_id2 RPAREN generateQuadFIND\n    \n    findOperator : \n    \n    generateQuadFIND : \n    \n    mean : MEAN meanOperator LPAREN ID add_id2 verifyArray RPAREN generateQuadMEAN \n         | empty\n    \n    meanOperator : \n    \n    generateQuadMEAN :\n    \n    mode : MODE modeOperator LPAREN ID add_id2 verifyArray RPAREN generateQuadMODE\n         | empty\n    \n    modeOperator : \n    \n    generateQuadMODE :\n    \n    variance : VARIANCE varianceOperator LPAREN ID add_id2 verifyArray RPAREN generateQuadVARIANCE\n         | empty\n    \n    varianceOperator : \n    \n    generateQuadVARIANCE :\n    \n    plot : PLOT plotOperator LPAREN ID add_id2 verifyArray saveIDaux COMMA ID add_id2 verifyArrayForPlot RPAREN generateQuadPLOT \n    \n    plotOperator : \n    \n    saveIDaux : \n    verifyArrayForPlot : \n    generateQuadPLOT : \n    \n    LoopEnd :\n    \n    for : FOR forOP assign TO CTEI DO generateQuadFOR LCURLY statements RCURLY LoopEnd\n    \n    forOP :\n    \n    generateQuadFOR :\n    \n    while : WHILE whileOP LPAREN exp RPAREN DO generateQuadWHILE LCURLY statements RCURLY LoopEnd\n    \n    whileOP : \n    \n    generateQuadWHILE :\n    \n    if : IF LPAREN exp RPAREN generateQuadIF THEN LCURLY statements RCURLY else endIF\n    \n    else : ELSE generateQuadELSE LCURLY statements RCURLY\n            | empty \n    \n    generateQuadIF : \n    \n    endIF : \n    \n    generateQuadELSE :\n    \n    exp : nexp generateQuadOR\n        | nexp generateQuadOR OR saveOperator nexp \n    \n    generateQuadOR : \n    \n    nexp : compexp generateQuadAND\n        | compexp generateQuadAND AND saveOperator compexp \n    \n    generateQuadAND : \n    \n    compexp : sumexp \n            | compexp1 sumexp \n    \n    compexp1 : sumexp GT saveOperator sumexp generateQuadCOMPARE\n             | sumexp LT saveOperator sumexp generateQuadCOMPARE\n             | sumexp GTE saveOperator sumexp generateQuadCOMPARE\n             | sumexp LTE saveOperator sumexp generateQuadCOMPARE\n             | sumexp NE saveOperator sumexp generateQuadCOMPARE\n             | sumexp COMPARE saveOperator sumexp generateQuadCOMPARE\n    \n    generateQuadCOMPARE : \n    \n    sumexp : mulexp \n           | mulexp PLUS saveOperator mulexp generateQuadSUM \n           | mulexp MINUS saveOperator mulexp generateQuadSUM\n    \n    generateQuadSUM :\n    \n    mulexp : pexp \n           | pexp MUL saveOperator pexp generateQuadMUL\n           | pexp DIV saveOperator pexp generateQuadMUL\n    \n    generateQuadMUL : \n    \n    pexp : ID add_id2\n         | CTEI saveCTE\n         | CTEF saveCTE\n         | CTEC saveCTE\n         | CTESTRING saveCTE\n         | functionCallExp \n         | LPAREN exp RPAREN \n         | ID arrStatement \n         | empty\n    \n    functionCallExp : ID LPAREN validateFunctionIDexp functionERA expAux verifyParams RPAREN generateQuadGOSUB \n    \n    validateFunctionIDexp : \n    \n    arrStatement : LBRACKET checkArray exp generateQuadVER RBRACKET getArrFinalAddress\n                | empty\n    \n    getArrFinalAddress :\n    \n    checkArray : \n    \n    generateQuadVER : \n     saveCTE :  saveOperator : \n    vars : var\n        | empty\n    \n    var : VARS var2 \n    \n    var2 : var2 type TWOPOINTS var1 SEMMICOLON addVar\n         | empty \n    \n    var1 : ID \n         | ID COMMA var1 addVar \n         | ID createArr arr \n         | ID createArr arr COMMA var1 addVar\n         | empty \n    \n    createArr : \n    addVar :\n    saveTypeVar : \n    \n    type : INT saveTypeVar\n         | CHAR saveTypeVar\n         | FLOAT saveTypeVar \n    \n    arr : LBRACKET CTEI setArraySize RBRACKET \n    \n    setArraySize : \n    \n    functions : FUNCTION INT saveFunType functions2 endFunc functions \n              | FUNCTION CHAR saveFunType functions2 endFunc functions \n              | FUNCTION FLOAT saveFunType functions2 endFunc functions \n              | FUNCTION VOID saveFunType functions1 endFunc functions \n              | empty\n    \n    saveFunType :\n    \n    functions1 : ID saveFunction LPAREN parameters RPAREN vars LCURLY setStartDirection statements RCURLY  \n               | empty\n    \n    functions2 : ID saveFunction LPAREN parameters RPAREN vars LCURLY setStartDirection statements RCURLY  \n               | empty\n    \n    setStartDirection : \n    \n    addParameter : \n    \n    parameters : paramsAux \n                | empty \n    \n    paramsAux : INT saveTypeVar TWOPOINTS ID addParameter nextParam \n              | FLOAT saveTypeVar TWOPOINTS ID addParameter nextParam \n              | CHAR saveTypeVar TWOPOINTS ID addParameter nextParam \n    \n    nextParam : COMMA paramsAux \n                | empty \n    \n    endFunc : \n    \n    saveFunction : \n    \n    args : args type TWOPOINTS var1 addVar\n         | empty \n    \n    args1 : ID addVar\n          | ID COMMA args1 \n          | empty \n    \n    return : RETURN LPAREN exp generateQuadRETURN RPAREN \n    \n    generateQuadRETURN : \n    \n    empty :  \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,4,5,6,7,8,9,10,11,12,14,15,16,18,20,27,28,29,30,36,37,38,39,40,45,47,48,49,50,52,53,57,59,60,61,63,88,90,91,92,97,351,353,],[0,-2,-182,-1,-8,-5,-136,-137,-6,-182,-182,-138,-140,-4,-158,-159,-159,-159,-159,-3,-182,-182,-182,-182,-173,-163,-173,-173,-173,-161,-147,-182,-182,-182,-182,-139,-154,-155,-156,-157,-7,-162,-160,]),'ID':([2,9,10,12,15,16,27,28,29,30,31,37,38,39,40,44,53,54,56,63,70,71,72,73,74,76,77,82,95,98,99,105,111,112,115,117,118,132,133,135,136,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,162,163,175,176,177,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,213,214,215,234,236,240,242,243,244,245,246,247,248,249,250,251,252,253,254,258,262,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,297,301,302,303,304,305,308,309,310,311,314,317,318,319,320,321,322,323,324,325,326,328,342,345,346,349,350,361,362,368,369,370,372,373,376,379,380,381,388,389,392,394,],[3,-136,-137,-182,-138,-140,-159,-159,-159,-159,42,46,46,46,51,-182,-147,42,79,-139,79,79,79,79,79,79,79,-84,42,79,79,79,-132,-130,144,154,154,79,79,79,79,-135,-135,154,154,154,154,154,154,-110,-114,-30,-134,-134,-134,-134,-123,-126,210,211,217,154,154,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,259,260,261,-44,-51,-124,-135,-135,154,154,154,154,154,154,154,154,154,154,-43,-164,-164,-131,-49,-56,154,154,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,154,79,79,337,338,339,340,-36,-129,154,154,79,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-61,154,79,79,-58,363,-182,-41,-82,-82,-93,-91,-127,385,-83,-86,-89,79,-81,-77,-90,]),'SEMMICOLON':([3,31,41,42,43,54,64,65,68,69,70,71,72,73,74,75,76,77,78,94,95,98,99,100,101,102,103,104,105,106,107,112,128,130,131,132,133,134,135,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,169,170,171,172,173,174,175,176,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,217,218,219,220,221,222,223,225,229,234,236,240,242,243,244,245,246,247,248,249,250,251,252,253,255,263,264,265,266,267,268,273,276,282,283,284,285,286,287,288,289,290,291,292,293,306,309,315,316,317,318,319,320,321,322,323,324,325,326,328,341,349,361,362,368,369,370,372,373,375,377,378,379,380,381,384,386,387,389,392,393,394,395,],[4,-182,53,-141,-145,-182,-147,-143,98,99,-182,-182,-182,-182,-182,105,-182,-182,-20,-142,-182,-182,-182,132,133,-14,-15,-16,-182,135,136,-130,-147,-10,-11,-182,-182,-17,-182,-182,-135,-135,-97,-100,-101,-182,-110,-114,-30,-134,-134,-134,-134,-123,-126,-144,-152,-12,-13,-18,-19,-182,-182,-95,-98,-135,-135,-135,-135,-135,-135,-102,-135,-135,-135,-135,-118,-125,-119,-120,-121,-122,-30,-28,-28,-28,-28,-28,-28,-66,-28,-44,-51,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-180,-21,-23,-24,-25,-26,-27,-22,-131,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-41,-129,-96,-99,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-61,-33,-58,-182,-41,-82,-82,-93,-91,-127,-68,-72,-76,-83,-86,-89,-65,-69,-73,-81,-77,-64,-90,-62,]),'VARS':([4,5,44,164,168,],[-2,12,12,12,12,]),'PRINCIPAL':([4,5,7,9,10,12,14,15,16,18,20,26,27,28,29,30,37,38,39,40,45,47,48,49,50,52,53,57,59,60,61,63,88,90,91,92,351,353,],[-2,13,-8,-136,-137,-182,-182,-138,-140,-9,-158,13,-159,-159,-159,-159,-182,-182,-182,-182,-173,-163,-173,-173,-173,-161,-147,-182,-182,-182,-182,-139,-154,-155,-156,-157,-162,-160,]),'FUNCTION':([4,5,7,9,10,12,14,15,16,27,28,29,30,37,38,39,40,45,47,48,49,50,52,53,57,59,60,61,63,351,353,],[-2,-182,-8,-136,-137,-182,19,-138,-140,-159,-159,-159,-159,-182,-182,-182,-182,-173,-163,-173,-173,-173,-161,-147,19,19,19,19,-139,-162,-160,]),'READ':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,80,-139,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-44,-51,-164,-164,80,80,80,-61,80,80,-58,-182,-82,-82,-93,-91,-83,-86,-89,80,-81,-77,-90,]),'WRITE':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,81,-139,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-44,-51,-164,-164,81,81,81,-61,81,81,-58,-182,-82,-82,-93,-91,-83,-86,-89,81,-81,-77,-90,]),'FOR':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,82,-139,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-44,-51,-164,-164,82,82,82,-61,82,82,-58,-182,-82,-82,-93,-91,-83,-86,-89,82,-81,-77,-90,]),'WHILE':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,83,-139,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-44,-51,-164,-164,83,83,83,-61,83,83,-58,-182,-82,-82,-93,-91,-83,-86,-89,83,-81,-77,-90,]),'IF':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,84,-139,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-44,-51,-164,-164,84,84,84,-61,84,84,-58,-182,-82,-82,-93,-91,-83,-86,-89,84,-81,-77,-90,]),'RETURN':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,85,-139,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-44,-51,-164,-164,85,85,85,-61,85,85,-58,-182,-82,-82,-93,-91,-83,-86,-89,85,-81,-77,-90,]),'SORT':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,86,-139,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-44,-51,-164,-164,86,86,86,-61,86,86,-58,-182,-82,-82,-93,-91,-83,-86,-89,86,-81,-77,-90,]),'PLOT':([9,10,12,15,16,44,53,56,63,70,71,72,73,74,76,77,98,99,105,132,133,135,136,234,236,258,262,297,301,314,328,345,346,349,361,368,369,370,372,379,380,381,388,389,392,394,],[-136,-137,-182,-138,-140,-182,-147,87,-139,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-44,-51,-164,-164,87,87,87,-61,87,87,-58,-182,-82,-82,-93,-91,-83,-86,-89,87,-81,-77,-90,]),'RCURLY':([9,10,12,15,16,44,53,56,63,67,72,73,74,78,98,99,102,103,104,105,130,131,132,133,134,135,136,171,172,173,174,258,262,297,301,314,330,336,345,346,347,359,360,361,368,369,370,372,379,380,381,388,391,394,],[-136,-137,-182,-138,-140,-182,-147,-182,-139,97,-182,-182,-182,-20,-182,-182,-14,-15,-16,-182,-10,-11,-182,-182,-17,-182,-182,-12,-13,-18,-19,-164,-164,-182,-182,-182,351,353,-182,-182,361,368,369,-182,-82,-82,-93,-91,-83,-86,-89,-182,394,-90,]),'LCURLY':([9,10,12,15,16,35,53,63,164,168,212,216,279,280,281,312,313,371,382,],[-136,-137,-182,-138,-140,44,-147,-139,-182,-182,258,262,-85,-88,314,345,346,-94,388,]),'INT':([12,15,16,19,53,63,89,93,332,],[-182,22,-140,27,-147,-139,124,124,124,]),'CHAR':([12,15,16,19,53,63,89,93,332,],[-182,23,-140,28,-147,-139,126,126,126,]),'FLOAT':([12,15,16,19,53,63,89,93,332,],[-182,24,-140,29,-147,-139,125,125,125,]),'LPAREN':([13,17,46,51,58,62,79,80,81,83,84,85,86,87,110,111,112,113,114,116,117,118,119,120,137,138,139,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,217,224,226,227,228,240,242,243,244,245,246,247,248,249,250,251,252,253,254,269,270,271,272,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-174,25,-174,-174,89,93,-34,-49,-56,-87,117,118,-59,-78,-43,-132,-130,141,142,145,146,146,162,163,-135,-135,177,146,146,146,146,146,146,-110,-114,204,-134,-134,-134,-134,-123,-126,146,146,146,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,204,-67,-63,-71,-75,-124,-135,-135,146,146,146,146,146,146,146,146,146,146,-43,302,303,304,305,-131,-49,-56,146,146,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,146,-36,-129,146,146,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,146,-41,-127,]),'VOID':([19,],[30,]),'TWOPOINTS':([21,22,23,24,32,33,34,124,125,126,165,166,167,],[31,-148,-148,-148,-149,-150,-151,-148,-148,-148,213,214,215,]),'RPAREN':([25,89,93,112,117,118,121,122,123,127,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,177,179,180,181,182,183,184,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,230,231,232,235,237,240,242,243,244,245,246,247,248,249,250,251,252,253,254,256,259,260,261,274,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,299,300,307,308,309,310,311,315,316,317,318,319,320,321,322,323,324,325,326,327,331,333,334,335,337,339,340,342,343,344,348,352,354,356,357,358,362,363,364,366,367,373,374,383,385,390,],[35,-182,-182,-130,-182,-182,164,-166,-167,168,-182,-182,-182,-182,188,-97,-100,-101,-182,-110,-114,-30,-134,-134,-134,-134,-123,-126,-181,-182,234,-50,236,-52,-53,-57,239,240,-95,-98,-135,-135,-135,-135,-135,-135,-102,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,255,-30,-35,-37,-40,-47,-54,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-60,-165,-165,-165,306,-36,-131,-49,-56,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,328,-182,-182,-182,-38,-36,-129,-182,-182,-96,-99,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-35,-168,-172,-169,-170,-30,-30,-30,-182,-48,-55,362,-171,-60,-60,-60,-39,-41,-30,375,377,378,-127,-80,389,-30,393,]),'COMMA':([42,65,112,141,142,148,149,150,151,152,153,154,155,156,157,158,159,160,170,177,180,183,184,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,231,232,235,237,240,242,243,244,245,246,247,248,249,250,251,252,253,254,257,259,260,261,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,296,298,299,300,308,309,310,311,315,316,317,318,319,320,321,322,323,324,325,326,329,338,342,355,362,365,373,],[54,95,-130,-182,-182,-97,-100,-101,-182,-110,-114,-30,-134,-134,-134,-134,-123,-126,-152,-182,-50,-126,-57,-95,-98,-135,-135,-135,-135,-135,-135,-102,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-37,-126,277,278,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-60,-165,-165,-165,308,-131,-49,-56,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,-79,332,332,332,-36,-129,-182,-182,-96,-99,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,350,-30,-182,-60,-41,376,-127,]),'LBRACKET':([42,55,79,144,154,217,],[-146,66,111,111,111,111,]),'CTEI':([66,111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,185,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[96,-132,-130,155,155,-135,-135,155,155,155,155,155,155,-110,-114,-30,-134,-134,-134,-134,-123,-126,155,155,155,238,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-124,-135,-135,155,155,155,155,155,155,155,155,155,155,-43,-131,-49,-56,155,155,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,155,-36,-129,155,155,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,155,-41,-127,]),'EQUALS':([79,108,109,112,144,276,309,],[-30,137,138,-130,-30,-131,-129,]),'RBRACKET':([96,111,112,129,140,148,149,150,151,152,153,154,155,156,157,158,159,160,178,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,233,240,242,243,244,245,246,247,248,249,250,251,252,253,276,282,283,284,285,286,287,288,289,290,291,292,293,309,315,316,317,318,319,320,321,322,323,324,325,326,362,373,],[-153,-132,-130,170,-182,-97,-100,-101,-182,-110,-114,-30,-134,-134,-134,-134,-123,-126,-133,-95,-98,-135,-135,-135,-135,-135,-135,-102,-135,-135,-135,-135,-118,-125,-119,-120,-121,-122,276,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-131,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-129,-96,-99,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-41,-127,]),'CTEF':([111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,156,156,-135,-135,156,156,156,156,156,156,-110,-114,-30,-134,-134,-134,-134,-123,-126,156,156,156,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-124,-135,-135,156,156,156,156,156,156,156,156,156,156,-43,-131,-49,-56,156,156,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,156,-36,-129,156,156,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,156,-41,-127,]),'CTEC':([111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,157,157,-135,-135,157,157,157,157,157,157,-110,-114,-30,-134,-134,-134,-134,-123,-126,157,157,157,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-124,-135,-135,157,157,157,157,157,157,157,157,157,157,-43,-131,-49,-56,157,157,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,157,-36,-129,157,157,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,157,-41,-127,]),'CTESTRING':([111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,158,158,-135,-135,158,158,158,158,158,158,-110,-114,-30,-134,-134,-134,-134,-123,-126,158,158,158,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-124,-135,-135,158,158,158,158,158,158,158,158,158,158,-43,-131,-49,-56,158,158,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,158,-36,-129,158,158,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,158,-41,-127,]),'OR':([111,112,117,118,137,138,140,141,142,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,175,176,177,183,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,316,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,-97,-100,-101,-182,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,242,-98,-135,-135,-135,-135,-135,-135,-102,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-131,-49,-56,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,-36,-129,-182,-182,-99,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-182,-41,-127,]),'AND':([111,112,117,118,137,138,140,141,142,145,146,149,150,151,152,153,154,155,156,157,158,159,160,175,176,177,183,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,-100,-101,-182,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,243,-135,-135,-135,-135,-135,-135,-102,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-131,-49,-56,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,-36,-129,-182,-182,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-182,-41,-127,]),'GT':([111,112,117,118,137,138,140,141,142,145,146,150,152,153,154,155,156,157,158,159,160,175,176,177,183,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,250,251,252,253,254,276,277,278,282,283,290,291,292,293,294,308,309,310,311,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,191,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-113,-113,-117,-117,-182,-36,-129,-182,-182,-111,-112,-115,-116,-182,-41,-127,]),'LT':([111,112,117,118,137,138,140,141,142,145,146,150,152,153,154,155,156,157,158,159,160,175,176,177,183,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,250,251,252,253,254,276,277,278,282,283,290,291,292,293,294,308,309,310,311,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,192,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-113,-113,-117,-117,-182,-36,-129,-182,-182,-111,-112,-115,-116,-182,-41,-127,]),'GTE':([111,112,117,118,137,138,140,141,142,145,146,150,152,153,154,155,156,157,158,159,160,175,176,177,183,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,250,251,252,253,254,276,277,278,282,283,290,291,292,293,294,308,309,310,311,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,193,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-113,-113,-117,-117,-182,-36,-129,-182,-182,-111,-112,-115,-116,-182,-41,-127,]),'LTE':([111,112,117,118,137,138,140,141,142,145,146,150,152,153,154,155,156,157,158,159,160,175,176,177,183,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,250,251,252,253,254,276,277,278,282,283,290,291,292,293,294,308,309,310,311,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,194,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-113,-113,-117,-117,-182,-36,-129,-182,-182,-111,-112,-115,-116,-182,-41,-127,]),'NE':([111,112,117,118,137,138,140,141,142,145,146,150,152,153,154,155,156,157,158,159,160,175,176,177,183,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,250,251,252,253,254,276,277,278,282,283,290,291,292,293,294,308,309,310,311,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,195,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-113,-113,-117,-117,-182,-36,-129,-182,-182,-111,-112,-115,-116,-182,-41,-127,]),'COMPARE':([111,112,117,118,137,138,140,141,142,145,146,150,152,153,154,155,156,157,158,159,160,175,176,177,183,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,250,251,252,253,254,276,277,278,282,283,290,291,292,293,294,308,309,310,311,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,196,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-113,-113,-117,-117,-182,-36,-129,-182,-182,-111,-112,-115,-116,-182,-41,-127,]),'PLUS':([111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,183,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,-182,198,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,-36,-129,-182,-182,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-182,-41,-127,]),'MINUS':([111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,183,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,-182,199,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,-36,-129,-182,-182,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-182,-41,-127,]),'MUL':([111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,183,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,-182,-110,200,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,-36,-129,-182,-182,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-182,-41,-127,]),'DIV':([111,112,117,118,137,138,140,141,142,145,146,151,152,153,154,155,156,157,158,159,160,175,176,177,183,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,217,225,232,240,242,243,244,245,246,247,248,249,250,251,252,253,254,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,308,309,310,311,317,318,319,320,321,322,323,324,325,326,342,362,373,],[-132,-130,-182,-182,-135,-135,-182,-182,-182,-182,-182,-182,-110,201,-30,-134,-134,-134,-134,-123,-126,-182,-182,-182,-126,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-118,-125,-128,-119,-120,-121,-122,-30,-126,-126,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-43,-131,-49,-56,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-182,-36,-129,-182,-182,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-182,-41,-127,]),'TO':([112,137,138,143,148,149,150,151,152,153,154,155,156,157,158,159,160,175,176,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,217,218,219,220,221,222,223,225,229,240,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,273,276,282,283,284,285,286,287,288,289,290,291,292,293,306,309,315,316,317,318,319,320,321,322,323,324,325,326,341,362,373,375,377,378,384,386,387,393,395,],[-130,-135,-135,185,-97,-100,-101,-182,-110,-114,-30,-134,-134,-134,-134,-123,-126,-182,-182,-95,-98,-135,-135,-135,-135,-135,-135,-102,-135,-135,-135,-135,-118,-125,-119,-120,-121,-122,-30,-28,-28,-28,-28,-28,-28,-66,-28,-124,-135,-135,-182,-182,-182,-182,-182,-182,-182,-182,-182,-182,-21,-23,-24,-25,-26,-27,-22,-131,-182,-182,-109,-109,-109,-109,-109,-109,-113,-113,-117,-117,-41,-129,-96,-99,-103,-104,-105,-106,-107,-108,-111,-112,-115,-116,-33,-41,-127,-68,-72,-76,-65,-69,-73,-64,-62,]),'MEAN':([137,175,],[-135,224,]),'FIND':([137,175,],[-135,226,]),'MODE':([137,175,],[-135,227,]),'VARIANCE':([137,175,],[-135,228,]),'THEN':([188,241,],[-92,281,]),'DO':([238,239,],[279,280,]),'ELSE':([361,],[371,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'addProgram':([4,],[5,]),'program1':([5,],[6,]),'vars':([5,44,164,168,],[7,56,212,216,]),'program2':([5,26,],[8,36,]),'var':([5,44,164,168,],[9,9,9,9,]),'empty':([5,12,14,31,37,38,39,40,44,54,56,57,59,60,61,70,71,72,73,74,76,77,79,89,93,95,98,99,105,117,118,132,133,135,136,140,141,142,144,145,146,151,154,164,168,175,176,177,217,244,245,246,247,248,249,250,251,252,253,282,283,294,297,298,299,300,301,310,311,314,342,345,346,361,388,],[10,16,20,43,47,47,47,52,10,43,78,20,20,20,20,78,78,78,78,78,78,78,112,123,123,43,78,78,78,160,160,78,78,78,78,160,160,183,112,160,160,160,112,10,10,225,160,232,112,160,160,160,160,160,160,160,160,160,160,160,160,232,78,333,333,333,78,160,160,78,232,78,78,372,78,]),'principal':([5,26,],[11,11,]),'mainQuad':([7,],[14,]),'var2':([12,],[15,]),'saveFunction':([13,46,51,],[17,58,62,]),'functions':([14,57,59,60,61,],[18,88,90,91,92,]),'type':([15,],[21,]),'mainEnd':([18,],[26,]),'saveTypeVar':([22,23,24,124,125,126,],[32,33,34,165,166,167,]),'saveFunType':([27,28,29,30,],[37,38,39,40,]),'var1':([31,54,95,],[41,64,128,]),'functions2':([37,38,39,],[45,48,49,]),'functions1':([40,],[50,]),'createArr':([42,],[55,]),'endFunc':([45,48,49,50,],[57,59,60,61,]),'addVar':([53,64,128,],[63,94,169,]),'arr':([55,],[65,]),'statements':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[67,100,101,102,103,104,106,107,130,131,134,171,172,173,174,330,336,347,359,360,391,]),'assign':([56,70,71,72,73,74,76,77,98,99,105,115,132,133,135,136,297,301,314,345,346,388,],[68,68,68,68,68,68,68,68,68,68,68,143,68,68,68,68,68,68,68,68,68,68,]),'functionCall':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,175,297,301,314,345,346,388,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,219,69,69,69,69,69,69,]),'read':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'write':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'for':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'while':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'if':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'return':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'sort':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'plot':([56,70,71,72,73,74,76,77,98,99,105,132,133,135,136,297,301,314,345,346,388,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'add_id2':([79,144,154,210,211,217,337,338,339,340,363,385,],[108,108,202,256,257,202,354,355,356,357,374,390,]),'arrStatement':([79,144,154,217,],[109,109,203,203,]),'validateFunctionID':([79,217,],[110,110,]),'operatorRead':([80,277,],[113,310,]),'writeOperator':([81,278,],[114,311,]),'forOP':([82,],[115,]),'whileOP':([83,],[116,]),'sortOperator':([86,],[119,]),'plotOperator':([87,],[120,]),'parameters':([89,93,],[121,127,]),'paramsAux':([89,93,332,],[122,122,352,]),'setArraySize':([96,],[129,]),'functionERA':([110,254,],[139,294,]),'checkArray':([111,],[140,]),'exp':([117,118,140,141,142,145,146,175,176,177,294,310,311,342,],[147,161,178,180,184,186,187,218,229,231,231,180,184,231,]),'nexp':([117,118,140,141,142,145,146,175,176,177,282,294,310,311,342,],[148,148,148,148,148,148,148,148,148,148,315,148,148,148,148,]),'compexp':([117,118,140,141,142,145,146,175,176,177,282,283,294,310,311,342,],[149,149,149,149,149,149,149,149,149,149,149,316,149,149,149,149,]),'sumexp':([117,118,140,141,142,145,146,151,175,176,177,244,245,246,247,248,249,282,283,294,310,311,342,],[150,150,150,150,150,150,150,197,150,150,150,284,285,286,287,288,289,150,150,150,150,150,150,]),'compexp1':([117,118,140,141,142,145,146,175,176,177,282,283,294,310,311,342,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'mulexp':([117,118,140,141,142,145,146,151,175,176,177,244,245,246,247,248,249,250,251,282,283,294,310,311,342,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,290,291,152,152,152,152,152,152,]),'pexp':([117,118,140,141,142,145,146,151,175,176,177,244,245,246,247,248,249,250,251,252,253,282,283,294,310,311,342,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,292,293,153,153,153,153,153,153,]),'functionCallExp':([117,118,140,141,142,145,146,151,175,176,177,244,245,246,247,248,249,250,251,252,253,282,283,294,310,311,342,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'saveOperator':([137,138,191,192,193,194,195,196,198,199,200,201,242,243,],[175,176,244,245,246,247,248,249,250,251,252,253,282,283,]),'paramReadAux':([141,310,],[179,343,]),'paramWrite':([142,],[181,]),'paramWriteAux':([142,311,],[182,344,]),'generateQuadOR':([148,],[189,]),'generateQuadAND':([149,],[190,]),'saveCTE':([155,156,157,158,],[205,206,207,208,]),'generateQuadRETURN':([161,],[209,]),'mean':([175,],[220,]),'find':([175,],[221,]),'mode':([175,],[222,]),'variance':([175,],[223,]),'expAux':([177,294,342,],[230,327,358,]),'generateQuadVER':([178,],[233,]),'generateQuadREAD':([180,],[235,]),'generateQuadPRINT':([184,],[237,]),'generateQuadIF':([188,],[241,]),'validateFunctionIDexp':([204,],[254,]),'generateAssignQuad':([218,219,220,221,222,223,229,],[263,264,265,266,267,268,273,]),'meanOperator':([224,],[269,]),'findOperator':([226,],[270,]),'modeOperator':([227,],[271,]),'varianceOperator':([228,],[272,]),'verifyParams':([230,327,],[274,348,]),'generateQuadPARAM':([231,],[275,]),'verifyArray':([256,257,354,355,356,357,],[295,296,364,365,366,367,]),'setStartDirection':([258,262,],[297,301,]),'addParameter':([259,260,261,],[298,299,300,]),'paramsCount':([275,308,],[307,342,]),'getArrFinalAddress':([276,],[309,]),'generateQuadFOR':([279,],[312,]),'generateQuadWHILE':([280,],[313,]),'generateQuadCOMPARE':([284,285,286,287,288,289,],[317,318,319,320,321,322,]),'generateQuadSUM':([290,291,],[323,324,]),'generateQuadMUL':([292,293,],[325,326,]),'saveIDaux':([296,],[329,]),'nextParam':([298,299,300,],[331,334,335,]),'generateQuadGOSUB':([306,362,],[341,373,]),'generateQuadSORT':([328,],[349,]),'else':([361,],[370,]),'LoopEnd':([368,369,],[379,380,]),'endIF':([370,],[381,]),'generateQuadELSE':([371,],[382,]),'verifyArrayForPlot':([374,],[383,]),'generateQuadMEAN':([375,],[384,]),'generateQuadMODE':([377,],[386,]),'generateQuadVARIANCE':([378,],[387,]),'generateQuadPLOT':([389,],[392,]),'generateQuadFIND':([393,],[395,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMMICOLON addProgram program1','program',5,'p_program','main.py',190),
  ('addProgram -> <empty>','addProgram',0,'p_addProgram','main.py',196),
  ('program1 -> vars mainQuad functions mainEnd program2','program1',5,'p_program1','main.py',218),
  ('program1 -> vars mainQuad functions','program1',3,'p_program1','main.py',219),
  ('program1 -> program2','program1',1,'p_program1','main.py',220),
  ('program2 -> principal','program2',1,'p_program2','main.py',225),
  ('principal -> PRINCIPAL saveFunction LPAREN RPAREN LCURLY vars statements RCURLY','principal',8,'p_principal','main.py',230),
  ('mainQuad -> <empty>','mainQuad',0,'p_mainQuad','main.py',235),
  ('mainEnd -> <empty>','mainEnd',0,'p_mainEnd','main.py',246),
  ('statements -> assign SEMMICOLON statements','statements',3,'p_statements','main.py',257),
  ('statements -> functionCall SEMMICOLON statements','statements',3,'p_statements','main.py',258),
  ('statements -> read statements SEMMICOLON statements','statements',4,'p_statements','main.py',259),
  ('statements -> write statements SEMMICOLON statements','statements',4,'p_statements','main.py',260),
  ('statements -> for statements','statements',2,'p_statements','main.py',261),
  ('statements -> while statements','statements',2,'p_statements','main.py',262),
  ('statements -> if statements','statements',2,'p_statements','main.py',263),
  ('statements -> return SEMMICOLON statements','statements',3,'p_statements','main.py',264),
  ('statements -> sort statements SEMMICOLON statements','statements',4,'p_statements','main.py',265),
  ('statements -> plot statements SEMMICOLON statements','statements',4,'p_statements','main.py',266),
  ('statements -> empty','statements',1,'p_statements','main.py',267),
  ('assign -> ID add_id2 EQUALS saveOperator exp generateAssignQuad','assign',6,'p_assign','main.py',272),
  ('assign -> ID arrStatement EQUALS saveOperator exp generateAssignQuad','assign',6,'p_assign','main.py',273),
  ('assign -> ID add_id2 EQUALS saveOperator functionCall generateAssignQuad','assign',6,'p_assign','main.py',274),
  ('assign -> ID add_id2 EQUALS saveOperator mean generateAssignQuad','assign',6,'p_assign','main.py',275),
  ('assign -> ID add_id2 EQUALS saveOperator find generateAssignQuad','assign',6,'p_assign','main.py',276),
  ('assign -> ID add_id2 EQUALS saveOperator mode generateAssignQuad','assign',6,'p_assign','main.py',277),
  ('assign -> ID add_id2 EQUALS saveOperator variance generateAssignQuad','assign',6,'p_assign','main.py',278),
  ('generateAssignQuad -> <empty>','generateAssignQuad',0,'p_generateAssignQuad','main.py',282),
  ('add_id -> <empty>','add_id',0,'p_add_id','main.py',315),
  ('add_id2 -> <empty>','add_id2',0,'p_add_id2','main.py',330),
  ('add_id3 -> <empty>','add_id3',0,'p_add_id3','main.py',349),
  ('media -> MEDIA LPAREN arr RPAREN SEMMICOLON','media',5,'p_media','main.py',369),
  ('functionCall -> ID validateFunctionID functionERA LPAREN expAux verifyParams RPAREN generateQuadGOSUB','functionCall',8,'p_functionCall','main.py',379),
  ('validateFunctionID -> <empty>','validateFunctionID',0,'p_validateFunctionID','main.py',387),
  ('verifyParams -> <empty>','verifyParams',0,'p_verifyParams','main.py',402),
  ('paramsCount -> <empty>','paramsCount',0,'p_paramsCount','main.py',422),
  ('generateQuadPARAM -> <empty>','generateQuadPARAM',0,'p_generateQuadPARAM','main.py',431),
  ('expAux -> exp generateQuadPARAM paramsCount','expAux',3,'p_expAux','main.py',467),
  ('expAux -> exp generateQuadPARAM COMMA paramsCount expAux','expAux',5,'p_expAux','main.py',468),
  ('expAux -> empty','expAux',1,'p_expAux','main.py',469),
  ('generateQuadGOSUB -> <empty>','generateQuadGOSUB',0,'p_generateQuadGOSUB','main.py',475),
  ('fillEndProc -> <empty>','fillEndProc',0,'p_fillEndProc','main.py',499),
  ('functionERA -> <empty>','functionERA',0,'p_functionERA','main.py',509),
  ('read -> READ operatorRead LPAREN paramReadAux RPAREN','read',5,'p_read','main.py',527),
  ('paramRead -> paramReadAux','paramRead',1,'p_paramRead','main.py',532),
  ('paramRead -> empty','paramRead',1,'p_paramRead','main.py',533),
  ('paramReadAux -> exp generateQuadREAD','paramReadAux',2,'p_paramReadAux','main.py',538),
  ('paramReadAux -> exp generateQuadREAD COMMA operatorRead paramReadAux','paramReadAux',5,'p_paramReadAux','main.py',539),
  ('operatorRead -> <empty>','operatorRead',0,'p_operatorRead','main.py',544),
  ('generateQuadREAD -> <empty>','generateQuadREAD',0,'p_generateQuadREAD','main.py',551),
  ('write -> WRITE writeOperator LPAREN paramWrite RPAREN','write',5,'p_write','main.py',571),
  ('paramWrite -> paramWriteAux','paramWrite',1,'p_paramWrite','main.py',576),
  ('paramWrite -> empty','paramWrite',1,'p_paramWrite','main.py',577),
  ('paramWriteAux -> exp generateQuadPRINT','paramWriteAux',2,'p_paramWriteAux','main.py',582),
  ('paramWriteAux -> exp generateQuadPRINT COMMA writeOperator paramWriteAux','paramWriteAux',5,'p_paramWriteAux','main.py',583),
  ('writeOperator -> <empty>','writeOperator',0,'p_writeOperator','main.py',588),
  ('generateQuadPRINT -> <empty>','generateQuadPRINT',0,'p_generateQuadPRINT','main.py',595),
  ('sort -> SORT sortOperator LPAREN ID add_id2 verifyArray RPAREN generateQuadSORT','sort',8,'p_sort','main.py',616),
  ('sortOperator -> <empty>','sortOperator',0,'p_sortOperator','main.py',622),
  ('verifyArray -> <empty>','verifyArray',0,'p_verifyArray','main.py',628),
  ('generateQuadSORT -> <empty>','generateQuadSORT',0,'p_generateQuadSORT','main.py',642),
  ('find -> FIND findOperator LPAREN ID add_id2 verifyArray COMMA ID add_id2 RPAREN generateQuadFIND','find',11,'p_find','main.py',663),
  ('findOperator -> <empty>','findOperator',0,'p_findOperator','main.py',668),
  ('generateQuadFIND -> <empty>','generateQuadFIND',0,'p_generateQuadFIND','main.py',676),
  ('mean -> MEAN meanOperator LPAREN ID add_id2 verifyArray RPAREN generateQuadMEAN','mean',8,'p_mean','main.py',703),
  ('mean -> empty','mean',1,'p_mean','main.py',704),
  ('meanOperator -> <empty>','meanOperator',0,'p_meanOperator','main.py',709),
  ('generateQuadMEAN -> <empty>','generateQuadMEAN',0,'p_generateQuadMEAN','main.py',716),
  ('mode -> MODE modeOperator LPAREN ID add_id2 verifyArray RPAREN generateQuadMODE','mode',8,'p_mode','main.py',741),
  ('mode -> empty','mode',1,'p_mode','main.py',742),
  ('modeOperator -> <empty>','modeOperator',0,'p_modeOperator','main.py',747),
  ('generateQuadMODE -> <empty>','generateQuadMODE',0,'p_generateQuadMODE','main.py',754),
  ('variance -> VARIANCE varianceOperator LPAREN ID add_id2 verifyArray RPAREN generateQuadVARIANCE','variance',8,'p_variance','main.py',779),
  ('variance -> empty','variance',1,'p_variance','main.py',780),
  ('varianceOperator -> <empty>','varianceOperator',0,'p_varianceOperator','main.py',785),
  ('generateQuadVARIANCE -> <empty>','generateQuadVARIANCE',0,'p_generateQuadVARIANCE','main.py',792),
  ('plot -> PLOT plotOperator LPAREN ID add_id2 verifyArray saveIDaux COMMA ID add_id2 verifyArrayForPlot RPAREN generateQuadPLOT','plot',13,'p_plot','main.py',816),
  ('plotOperator -> <empty>','plotOperator',0,'p_plotOperator','main.py',822),
  ('saveIDaux -> <empty>','saveIDaux',0,'p_saveIDaux','main.py',829),
  ('verifyArrayForPlot -> <empty>','verifyArrayForPlot',0,'p_verifyArrayForPlot','main.py',835),
  ('generateQuadPLOT -> <empty>','generateQuadPLOT',0,'p_generateQuadPLOT','main.py',850),
  ('LoopEnd -> <empty>','LoopEnd',0,'p_LoopEnd','main.py',876),
  ('for -> FOR forOP assign TO CTEI DO generateQuadFOR LCURLY statements RCURLY LoopEnd','for',11,'p_for','main.py',903),
  ('forOP -> <empty>','forOP',0,'p_forOP','main.py',908),
  ('generateQuadFOR -> <empty>','generateQuadFOR',0,'p_generateQuadFOR','main.py',916),
  ('while -> WHILE whileOP LPAREN exp RPAREN DO generateQuadWHILE LCURLY statements RCURLY LoopEnd','while',11,'p_while','main.py',936),
  ('whileOP -> <empty>','whileOP',0,'p_whileOP','main.py',941),
  ('generateQuadWHILE -> <empty>','generateQuadWHILE',0,'p_generateQuadWHILE','main.py',949),
  ('if -> IF LPAREN exp RPAREN generateQuadIF THEN LCURLY statements RCURLY else endIF','if',11,'p_if','main.py',973),
  ('else -> ELSE generateQuadELSE LCURLY statements RCURLY','else',5,'p_else','main.py',978),
  ('else -> empty','else',1,'p_else','main.py',979),
  ('generateQuadIF -> <empty>','generateQuadIF',0,'p_generateQuadIF','main.py',984),
  ('endIF -> <empty>','endIF',0,'p_endIF','main.py',1003),
  ('generateQuadELSE -> <empty>','generateQuadELSE',0,'p_generateQuadELSE','main.py',1011),
  ('exp -> nexp generateQuadOR','exp',2,'p_exp','main.py',1065),
  ('exp -> nexp generateQuadOR OR saveOperator nexp','exp',5,'p_exp','main.py',1066),
  ('generateQuadOR -> <empty>','generateQuadOR',0,'p_generateQuadOR','main.py',1071),
  ('nexp -> compexp generateQuadAND','nexp',2,'p_nexp','main.py',1081),
  ('nexp -> compexp generateQuadAND AND saveOperator compexp','nexp',5,'p_nexp','main.py',1082),
  ('generateQuadAND -> <empty>','generateQuadAND',0,'p_generateQuadAND','main.py',1087),
  ('compexp -> sumexp','compexp',1,'p_compexp','main.py',1098),
  ('compexp -> compexp1 sumexp','compexp',2,'p_compexp','main.py',1099),
  ('compexp1 -> sumexp GT saveOperator sumexp generateQuadCOMPARE','compexp1',5,'p_compexp1','main.py',1104),
  ('compexp1 -> sumexp LT saveOperator sumexp generateQuadCOMPARE','compexp1',5,'p_compexp1','main.py',1105),
  ('compexp1 -> sumexp GTE saveOperator sumexp generateQuadCOMPARE','compexp1',5,'p_compexp1','main.py',1106),
  ('compexp1 -> sumexp LTE saveOperator sumexp generateQuadCOMPARE','compexp1',5,'p_compexp1','main.py',1107),
  ('compexp1 -> sumexp NE saveOperator sumexp generateQuadCOMPARE','compexp1',5,'p_compexp1','main.py',1108),
  ('compexp1 -> sumexp COMPARE saveOperator sumexp generateQuadCOMPARE','compexp1',5,'p_compexp1','main.py',1109),
  ('generateQuadCOMPARE -> <empty>','generateQuadCOMPARE',0,'p_generateQuadCOMPARE','main.py',1114),
  ('sumexp -> mulexp','sumexp',1,'p_sumexp','main.py',1125),
  ('sumexp -> mulexp PLUS saveOperator mulexp generateQuadSUM','sumexp',5,'p_sumexp','main.py',1126),
  ('sumexp -> mulexp MINUS saveOperator mulexp generateQuadSUM','sumexp',5,'p_sumexp','main.py',1127),
  ('generateQuadSUM -> <empty>','generateQuadSUM',0,'p_generateQuadSUM','main.py',1132),
  ('mulexp -> pexp','mulexp',1,'p_mulexp','main.py',1143),
  ('mulexp -> pexp MUL saveOperator pexp generateQuadMUL','mulexp',5,'p_mulexp','main.py',1144),
  ('mulexp -> pexp DIV saveOperator pexp generateQuadMUL','mulexp',5,'p_mulexp','main.py',1145),
  ('generateQuadMUL -> <empty>','generateQuadMUL',0,'p_generateQuadMUL','main.py',1150),
  ('pexp -> ID add_id2','pexp',2,'p_pexp','main.py',1161),
  ('pexp -> CTEI saveCTE','pexp',2,'p_pexp','main.py',1162),
  ('pexp -> CTEF saveCTE','pexp',2,'p_pexp','main.py',1163),
  ('pexp -> CTEC saveCTE','pexp',2,'p_pexp','main.py',1164),
  ('pexp -> CTESTRING saveCTE','pexp',2,'p_pexp','main.py',1165),
  ('pexp -> functionCallExp','pexp',1,'p_pexp','main.py',1166),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','main.py',1167),
  ('pexp -> ID arrStatement','pexp',2,'p_pexp','main.py',1168),
  ('pexp -> empty','pexp',1,'p_pexp','main.py',1169),
  ('functionCallExp -> ID LPAREN validateFunctionIDexp functionERA expAux verifyParams RPAREN generateQuadGOSUB','functionCallExp',8,'p_functionCallExp','main.py',1174),
  ('validateFunctionIDexp -> <empty>','validateFunctionIDexp',0,'p_validateFunctionIDexp','main.py',1182),
  ('arrStatement -> LBRACKET checkArray exp generateQuadVER RBRACKET getArrFinalAddress','arrStatement',6,'p_arrStatement','main.py',1197),
  ('arrStatement -> empty','arrStatement',1,'p_arrStatement','main.py',1198),
  ('getArrFinalAddress -> <empty>','getArrFinalAddress',0,'p_getArrFinalAddress','main.py',1203),
  ('checkArray -> <empty>','checkArray',0,'p_checkArray','main.py',1236),
  ('generateQuadVER -> <empty>','generateQuadVER',0,'p_generateQuadVER','main.py',1251),
  ('saveCTE -> <empty>','saveCTE',0,'p_saveCTE','main.py',1284),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','main.py',1334),
  ('vars -> var','vars',1,'p_vars','main.py',1347),
  ('vars -> empty','vars',1,'p_vars','main.py',1348),
  ('var -> VARS var2','var',2,'p_var','main.py',1353),
  ('var2 -> var2 type TWOPOINTS var1 SEMMICOLON addVar','var2',6,'p_var2','main.py',1358),
  ('var2 -> empty','var2',1,'p_var2','main.py',1359),
  ('var1 -> ID','var1',1,'p_var1','main.py',1364),
  ('var1 -> ID COMMA var1 addVar','var1',4,'p_var1','main.py',1365),
  ('var1 -> ID createArr arr','var1',3,'p_var1','main.py',1366),
  ('var1 -> ID createArr arr COMMA var1 addVar','var1',6,'p_var1','main.py',1367),
  ('var1 -> empty','var1',1,'p_var1','main.py',1368),
  ('createArr -> <empty>','createArr',0,'p_createArr','main.py',1377),
  ('addVar -> <empty>','addVar',0,'p_addVar','main.py',1389),
  ('saveTypeVar -> <empty>','saveTypeVar',0,'p_saveTypeVar','main.py',1430),
  ('type -> INT saveTypeVar','type',2,'p_type','main.py',1438),
  ('type -> CHAR saveTypeVar','type',2,'p_type','main.py',1439),
  ('type -> FLOAT saveTypeVar','type',2,'p_type','main.py',1440),
  ('arr -> LBRACKET CTEI setArraySize RBRACKET','arr',4,'p_arr','main.py',1445),
  ('setArraySize -> <empty>','setArraySize',0,'p_setArraySize','main.py',1450),
  ('functions -> FUNCTION INT saveFunType functions2 endFunc functions','functions',6,'p_functions','main.py',1476),
  ('functions -> FUNCTION CHAR saveFunType functions2 endFunc functions','functions',6,'p_functions','main.py',1477),
  ('functions -> FUNCTION FLOAT saveFunType functions2 endFunc functions','functions',6,'p_functions','main.py',1478),
  ('functions -> FUNCTION VOID saveFunType functions1 endFunc functions','functions',6,'p_functions','main.py',1479),
  ('functions -> empty','functions',1,'p_functions','main.py',1480),
  ('saveFunType -> <empty>','saveFunType',0,'p_saveFunType','main.py',1485),
  ('functions1 -> ID saveFunction LPAREN parameters RPAREN vars LCURLY setStartDirection statements RCURLY','functions1',10,'p_functions1','main.py',1492),
  ('functions1 -> empty','functions1',1,'p_functions1','main.py',1493),
  ('functions2 -> ID saveFunction LPAREN parameters RPAREN vars LCURLY setStartDirection statements RCURLY','functions2',10,'p_functions2','main.py',1498),
  ('functions2 -> empty','functions2',1,'p_functions2','main.py',1499),
  ('setStartDirection -> <empty>','setStartDirection',0,'p_setStartDirection','main.py',1504),
  ('addParameter -> <empty>','addParameter',0,'p_addParameter','main.py',1513),
  ('parameters -> paramsAux','parameters',1,'p_parameters','main.py',1531),
  ('parameters -> empty','parameters',1,'p_parameters','main.py',1532),
  ('paramsAux -> INT saveTypeVar TWOPOINTS ID addParameter nextParam','paramsAux',6,'p_paramsAux','main.py',1537),
  ('paramsAux -> FLOAT saveTypeVar TWOPOINTS ID addParameter nextParam','paramsAux',6,'p_paramsAux','main.py',1538),
  ('paramsAux -> CHAR saveTypeVar TWOPOINTS ID addParameter nextParam','paramsAux',6,'p_paramsAux','main.py',1539),
  ('nextParam -> COMMA paramsAux','nextParam',2,'p_nextParam','main.py',1544),
  ('nextParam -> empty','nextParam',1,'p_nextParam','main.py',1545),
  ('endFunc -> <empty>','endFunc',0,'p_endFunc','main.py',1552),
  ('saveFunction -> <empty>','saveFunction',0,'p_saveFunction','main.py',1574),
  ('args -> args type TWOPOINTS var1 addVar','args',5,'p_args','main.py',1592),
  ('args -> empty','args',1,'p_args','main.py',1593),
  ('args1 -> ID addVar','args1',2,'p_args1','main.py',1598),
  ('args1 -> ID COMMA args1','args1',3,'p_args1','main.py',1599),
  ('args1 -> empty','args1',1,'p_args1','main.py',1600),
  ('return -> RETURN LPAREN exp generateQuadRETURN RPAREN','return',5,'p_return','main.py',1605),
  ('generateQuadRETURN -> <empty>','generateQuadRETURN',0,'p_generateQuadRETURN','main.py',1610),
  ('empty -> <empty>','empty',0,'p_empty','main.py',1646),
]
