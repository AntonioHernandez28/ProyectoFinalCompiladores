
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMMA CTEC CTEF CTEI CTESTRING DIV DO ELSE END EQUALS FLOAT FOR FROM FUNCTION GT GTE ID IF INT LBRACKET LCURLY LPAREN LT LTE MEDIA MINUS MODA MUL NE OR PLOTXY PLUS PRINCIPAL PROGRAM RBRACKET RCURLY READ RETURN RPAREN SEMMICOLON SIMPLEREGRESSION THEN TO TWOPOINTS VARIANZA VARS VOID WHILE WRITE\n    program : PROGRAM ID SEMMICOLON program1 \n    \n    program1 : vars functions principal\n            | vars functions \n            | program2\n    \n    program2 : principal\n    \n    principal : PRINCIPAL LPAREN RPAREN LCURLY statements RCURLY \n    \n    statements : assign SEMMICOLON statements \n        | functionCall statements \n        | read statements \n        | write statements \n        | for statements \n        | while statements \n        | if statements \n        | empty\n    \n    assign : ID EQUALS exp\n    \n    functionCall : ID LPAREN exp RPAREN SEMMICOLON\n    \n    read : READ LPAREN read1 RPAREN SEMMICOLON \n    \n    read1 : ID read2 \n    \n    read2 : COMMA read1 \n        | empty\n    \n    media : MEDIA LPAREN arr RPAREN SEMMICOLON\n    \n    write : WRITE LPAREN write1 RPAREN SEMMICOLON \n    \n    write1 : write2 COMMA write2 \n            | write2 \n    \n    write2 : CTESTRING\n            | CTEI \n            | CTEF\n            | exp \n    \n    for : FOR assign TO CTEI DO LCURLY statements RCURLY \n    \n    while : WHILE LPAREN exp RPAREN LCURLY statements RCURLY \n    \n    if : IF LPAREN exp RPAREN THEN LCURLY statements RCURLY \n        | IF LPAREN exp RPAREN THEN LCURLY statements RCURLY else \n    \n    else : ELSE LCURLY statements RCURLY\n            | empty \n    \n    exp : texp\n        | texp OR texp\n    \n    gexp : mexp\n         | gexp1 mexp\n    \n    gexp1 : mexp GT mexp\n          | mexp LT mexp\n          | mexp GTE mexp\n          | mexp LTE mexp\n          | mexp NE mexp\n    \n    mexp : texp\n         | texp PLUS texp\n         | texp MINUS texp\n    \n    texp : fexp\n         | fexp MUL fexp\n         | fexp DIV fexp\n    \n    fexp : var1\n         | ID   \n         | CTEI\n         | CTEF\n         | CTEC\n         | functionCall\n         | LPAREN exp RPAREN\n    \n    vars : VARS var1\n        | empty\n    \n    var1 : type TWOPOINTS ID MultipleVars SEMMICOLON var2\n    \n    var2 : var1 \n        | empty \n    \n    MultipleVars : COMMA ID MultipleVars\n                | COMMA ID LBRACKET CTEI RBRACKET MultipleVars\n                | empty \n    \n    type : INT \n        | CHAR \n        | FLOAT \n    \n    arr : LBRACKET CTEI RBRACKET \n        | LBRACKET exp RBRACKET\n    \n    functions : FUNCTION type ID LPAREN args RPAREN vars LCURLY statements return exp SEMMICOLON RCURLY \n        | FUNCTION VOID ID LPAREN args RPAREN vars LCURLY statements RCURLY \n        | empty \n    \n    args : type TWOPOINTS ID MultipleArgs \n        | empty \n    \n    MultipleArgs : COMMA args \n        | empty \n    \n    return : RETURN exp SEMMICOLON\n    \n    empty :  \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,4,5,6,7,8,10,12,14,15,21,54,56,75,76,77,148,161,],[0,-78,-1,-78,-5,-4,-58,-3,-72,-57,-2,-78,-6,-59,-60,-61,-71,-70,]),'ID':([2,17,18,19,22,23,24,29,33,37,38,39,40,41,42,47,57,64,65,66,67,70,71,72,90,107,108,109,114,117,124,125,131,132,134,137,143,145,146,147,150,154,155,157,158,160,162,164,],[3,-65,-66,-67,26,27,28,44,55,44,44,44,44,44,44,69,44,81,81,93,81,81,81,103,81,81,81,81,93,81,44,44,-16,-17,-22,44,44,44,81,81,-30,-29,-31,-77,-32,-34,44,-33,]),'SEMMICOLON':([3,28,32,34,36,54,55,75,76,77,78,81,82,83,84,85,86,87,88,89,111,112,116,126,127,128,129,130,131,142,152,153,],[4,-78,54,-64,57,-78,-78,-59,-60,-61,-62,-51,-15,-35,-47,-50,-52,-53,-54,-55,131,132,134,-78,-36,-48,-49,-56,-16,-63,156,157,]),'VARS':([4,73,74,],[9,9,9,]),'FUNCTION':([4,6,10,15,54,75,76,77,],[-78,13,-58,-57,-78,-59,-60,-61,]),'PRINCIPAL':([4,6,10,12,14,15,54,75,76,77,148,161,],[11,-78,-58,11,-72,-57,-78,-59,-60,-61,-71,-70,]),'INT':([9,13,30,31,54,64,65,67,70,71,90,107,108,109,117,122,146,147,157,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-77,]),'CHAR':([9,13,30,31,54,64,65,67,70,71,90,107,108,109,117,122,146,147,157,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-77,]),'FLOAT':([9,13,30,31,54,64,65,67,70,71,90,107,108,109,117,122,146,147,157,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-77,]),'LCURLY':([10,15,25,54,73,74,75,76,77,104,105,119,136,138,159,],[-58,-57,29,-78,-78,-78,-59,-60,-61,124,125,137,143,145,162,]),'LPAREN':([11,26,27,44,45,46,48,49,64,65,67,70,71,81,90,107,108,109,117,146,147,157,],[20,30,31,65,66,67,70,71,90,90,90,90,90,65,90,90,90,90,90,90,90,-77,]),'VOID':([13,],[23,]),'TWOPOINTS':([16,17,18,19,50,],[24,-65,-66,-67,72,]),'RPAREN':([20,30,31,51,52,53,54,75,76,77,81,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,101,102,103,110,113,115,121,122,123,127,128,129,130,131,133,135,139,],[25,-78,-78,73,-74,74,-78,-59,-60,-61,-51,-35,-47,-50,-52,-53,-54,-55,111,112,-78,116,-24,-25,-26,-27,-28,119,120,-78,130,-18,-20,-73,-78,-76,-36,-48,-49,-56,-16,-19,-23,-75,]),'COMMA':([28,54,55,75,76,77,81,83,84,85,86,87,88,89,93,95,96,97,98,99,103,126,127,128,129,130,131,],[33,-78,33,-59,-60,-61,-51,-35,-47,-50,-52,-53,-54,-55,114,117,-25,-26,-27,-28,122,33,-36,-48,-49,-56,-16,]),'READ':([29,37,38,39,40,41,42,57,124,125,131,132,134,137,143,145,150,154,155,158,160,162,164,],[45,45,45,45,45,45,45,45,45,45,-16,-17,-22,45,45,45,-30,-29,-31,-32,-34,45,-33,]),'WRITE':([29,37,38,39,40,41,42,57,124,125,131,132,134,137,143,145,150,154,155,158,160,162,164,],[46,46,46,46,46,46,46,46,46,46,-16,-17,-22,46,46,46,-30,-29,-31,-32,-34,46,-33,]),'FOR':([29,37,38,39,40,41,42,57,124,125,131,132,134,137,143,145,150,154,155,158,160,162,164,],[47,47,47,47,47,47,47,47,47,47,-16,-17,-22,47,47,47,-30,-29,-31,-32,-34,47,-33,]),'WHILE':([29,37,38,39,40,41,42,57,124,125,131,132,134,137,143,145,150,154,155,158,160,162,164,],[48,48,48,48,48,48,48,48,48,48,-16,-17,-22,48,48,48,-30,-29,-31,-32,-34,48,-33,]),'IF':([29,37,38,39,40,41,42,57,124,125,131,132,134,137,143,145,150,154,155,158,160,162,164,],[49,49,49,49,49,49,49,49,49,49,-16,-17,-22,49,49,49,-30,-29,-31,-32,-34,49,-33,]),'RCURLY':([29,35,37,38,39,40,41,42,43,57,58,59,60,61,62,63,80,125,131,132,134,137,141,143,144,145,149,150,151,154,155,156,158,160,162,163,164,],[-78,56,-78,-78,-78,-78,-78,-78,-14,-78,-8,-9,-10,-11,-12,-13,-7,-78,-16,-17,-22,-78,148,-78,150,-78,154,-30,155,-29,-31,161,-32,-34,-78,164,-33,]),'RETURN':([37,38,39,40,41,42,43,57,58,59,60,61,62,63,80,124,131,132,134,140,150,154,155,158,160,164,],[-78,-78,-78,-78,-78,-78,-14,-78,-8,-9,-10,-11,-12,-13,-7,-78,-16,-17,-22,147,-30,-29,-31,-32,-34,-33,]),'EQUALS':([44,69,],[64,64,]),'MUL':([54,75,76,77,81,84,85,86,87,88,89,97,98,130,131,],[-78,-59,-60,-61,-51,108,-50,-52,-53,-54,-55,-52,-53,-56,-16,]),'DIV':([54,75,76,77,81,84,85,86,87,88,89,97,98,130,131,],[-78,-59,-60,-61,-51,109,-50,-52,-53,-54,-55,-52,-53,-56,-16,]),'OR':([54,75,76,77,81,83,84,85,86,87,88,89,97,98,128,129,130,131,],[-78,-59,-60,-61,-51,107,-47,-50,-52,-53,-54,-55,-52,-53,-48,-49,-56,-16,]),'TO':([54,68,75,76,77,81,82,83,84,85,86,87,88,89,127,128,129,130,131,],[-78,100,-59,-60,-61,-51,-15,-35,-47,-50,-52,-53,-54,-55,-36,-48,-49,-56,-16,]),'LBRACKET':([55,],[79,]),'CTEI':([64,65,67,70,71,79,90,100,107,108,109,117,146,147,157,],[86,86,97,86,86,106,86,118,86,86,86,97,86,86,-77,]),'CTEF':([64,65,67,70,71,90,107,108,109,117,146,147,157,],[87,87,98,87,87,87,87,87,87,98,87,87,-77,]),'CTEC':([64,65,67,70,71,90,107,108,109,117,146,147,157,],[88,88,88,88,88,88,88,88,88,88,88,88,-77,]),'CTESTRING':([67,117,],[96,96,]),'RBRACKET':([106,],[126,]),'DO':([118,],[136,]),'THEN':([120,],[138,]),'ELSE':([155,],[159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,73,74,],[6,104,105,]),'principal':([4,12,],[7,21,]),'program2':([4,],[8,]),'empty':([4,6,28,29,30,31,37,38,39,40,41,42,54,55,57,73,74,93,103,122,124,125,126,137,143,145,155,162,],[10,14,34,43,52,52,43,43,43,43,43,43,77,34,43,10,10,115,123,52,43,43,34,43,43,43,160,43,]),'functions':([6,],[12,]),'var1':([9,54,64,65,67,70,71,90,107,108,109,117,146,147,],[15,76,85,85,85,85,85,85,85,85,85,85,85,85,]),'type':([9,13,30,31,54,64,65,67,70,71,90,107,108,109,117,122,146,147,],[16,22,50,50,16,16,16,16,16,16,16,16,16,16,16,50,16,16,]),'MultipleVars':([28,55,126,],[32,78,142,]),'statements':([29,37,38,39,40,41,42,57,124,125,137,143,145,162,],[35,58,59,60,61,62,63,80,140,141,144,149,151,163,]),'assign':([29,37,38,39,40,41,42,47,57,124,125,137,143,145,162,],[36,36,36,36,36,36,36,68,36,36,36,36,36,36,36,]),'functionCall':([29,37,38,39,40,41,42,57,64,65,67,70,71,90,107,108,109,117,124,125,137,143,145,146,147,162,],[37,37,37,37,37,37,37,37,89,89,89,89,89,89,89,89,89,89,37,37,37,37,37,89,89,37,]),'read':([29,37,38,39,40,41,42,57,124,125,137,143,145,162,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'write':([29,37,38,39,40,41,42,57,124,125,137,143,145,162,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'for':([29,37,38,39,40,41,42,57,124,125,137,143,145,162,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'while':([29,37,38,39,40,41,42,57,124,125,137,143,145,162,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'if':([29,37,38,39,40,41,42,57,124,125,137,143,145,162,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'args':([30,31,122,],[51,53,139,]),'var2':([54,],[75,]),'exp':([64,65,67,70,71,90,117,146,147,],[82,91,99,101,102,110,99,152,153,]),'texp':([64,65,67,70,71,90,107,117,146,147,],[83,83,83,83,83,83,127,83,83,83,]),'fexp':([64,65,67,70,71,90,107,108,109,117,146,147,],[84,84,84,84,84,84,84,128,129,84,84,84,]),'read1':([66,114,],[92,133,]),'write1':([67,],[94,]),'write2':([67,117,],[95,135,]),'read2':([93,],[113,]),'MultipleArgs':([103,],[121,]),'return':([140,],[146,]),'else':([155,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMMICOLON program1','program',4,'p_program','main.py',124),
  ('program1 -> vars functions principal','program1',3,'p_program1','main.py',130),
  ('program1 -> vars functions','program1',2,'p_program1','main.py',131),
  ('program1 -> program2','program1',1,'p_program1','main.py',132),
  ('program2 -> principal','program2',1,'p_program2','main.py',137),
  ('principal -> PRINCIPAL LPAREN RPAREN LCURLY statements RCURLY','principal',6,'p_principal','main.py',142),
  ('statements -> assign SEMMICOLON statements','statements',3,'p_statements','main.py',147),
  ('statements -> functionCall statements','statements',2,'p_statements','main.py',148),
  ('statements -> read statements','statements',2,'p_statements','main.py',149),
  ('statements -> write statements','statements',2,'p_statements','main.py',150),
  ('statements -> for statements','statements',2,'p_statements','main.py',151),
  ('statements -> while statements','statements',2,'p_statements','main.py',152),
  ('statements -> if statements','statements',2,'p_statements','main.py',153),
  ('statements -> empty','statements',1,'p_statements','main.py',154),
  ('assign -> ID EQUALS exp','assign',3,'p_assign','main.py',160),
  ('functionCall -> ID LPAREN exp RPAREN SEMMICOLON','functionCall',5,'p_functionCall','main.py',165),
  ('read -> READ LPAREN read1 RPAREN SEMMICOLON','read',5,'p_read','main.py',170),
  ('read1 -> ID read2','read1',2,'p_read1','main.py',175),
  ('read2 -> COMMA read1','read2',2,'p_read2','main.py',180),
  ('read2 -> empty','read2',1,'p_read2','main.py',181),
  ('media -> MEDIA LPAREN arr RPAREN SEMMICOLON','media',5,'p_media','main.py',186),
  ('write -> WRITE LPAREN write1 RPAREN SEMMICOLON','write',5,'p_write','main.py',191),
  ('write1 -> write2 COMMA write2','write1',3,'p_write1','main.py',196),
  ('write1 -> write2','write1',1,'p_write1','main.py',197),
  ('write2 -> CTESTRING','write2',1,'p_write2','main.py',202),
  ('write2 -> CTEI','write2',1,'p_write2','main.py',203),
  ('write2 -> CTEF','write2',1,'p_write2','main.py',204),
  ('write2 -> exp','write2',1,'p_write2','main.py',205),
  ('for -> FOR assign TO CTEI DO LCURLY statements RCURLY','for',8,'p_for','main.py',210),
  ('while -> WHILE LPAREN exp RPAREN LCURLY statements RCURLY','while',7,'p_while','main.py',215),
  ('if -> IF LPAREN exp RPAREN THEN LCURLY statements RCURLY','if',8,'p_if','main.py',220),
  ('if -> IF LPAREN exp RPAREN THEN LCURLY statements RCURLY else','if',9,'p_if','main.py',221),
  ('else -> ELSE LCURLY statements RCURLY','else',4,'p_else','main.py',226),
  ('else -> empty','else',1,'p_else','main.py',227),
  ('exp -> texp','exp',1,'p_exp','main.py',233),
  ('exp -> texp OR texp','exp',3,'p_exp','main.py',234),
  ('gexp -> mexp','gexp',1,'p_gexp','main.py',245),
  ('gexp -> gexp1 mexp','gexp',2,'p_gexp','main.py',246),
  ('gexp1 -> mexp GT mexp','gexp1',3,'p_gexp1','main.py',251),
  ('gexp1 -> mexp LT mexp','gexp1',3,'p_gexp1','main.py',252),
  ('gexp1 -> mexp GTE mexp','gexp1',3,'p_gexp1','main.py',253),
  ('gexp1 -> mexp LTE mexp','gexp1',3,'p_gexp1','main.py',254),
  ('gexp1 -> mexp NE mexp','gexp1',3,'p_gexp1','main.py',255),
  ('mexp -> texp','mexp',1,'p_mexp','main.py',260),
  ('mexp -> texp PLUS texp','mexp',3,'p_mexp','main.py',261),
  ('mexp -> texp MINUS texp','mexp',3,'p_mexp','main.py',262),
  ('texp -> fexp','texp',1,'p_texp','main.py',267),
  ('texp -> fexp MUL fexp','texp',3,'p_texp','main.py',268),
  ('texp -> fexp DIV fexp','texp',3,'p_texp','main.py',269),
  ('fexp -> var1','fexp',1,'p_fexp','main.py',274),
  ('fexp -> ID','fexp',1,'p_fexp','main.py',275),
  ('fexp -> CTEI','fexp',1,'p_fexp','main.py',276),
  ('fexp -> CTEF','fexp',1,'p_fexp','main.py',277),
  ('fexp -> CTEC','fexp',1,'p_fexp','main.py',278),
  ('fexp -> functionCall','fexp',1,'p_fexp','main.py',279),
  ('fexp -> LPAREN exp RPAREN','fexp',3,'p_fexp','main.py',280),
  ('vars -> VARS var1','vars',2,'p_vars','main.py',287),
  ('vars -> empty','vars',1,'p_vars','main.py',288),
  ('var1 -> type TWOPOINTS ID MultipleVars SEMMICOLON var2','var1',6,'p_var1','main.py',293),
  ('var2 -> var1','var2',1,'p_var2','main.py',298),
  ('var2 -> empty','var2',1,'p_var2','main.py',299),
  ('MultipleVars -> COMMA ID MultipleVars','MultipleVars',3,'p_MultipleVars','main.py',305),
  ('MultipleVars -> COMMA ID LBRACKET CTEI RBRACKET MultipleVars','MultipleVars',6,'p_MultipleVars','main.py',306),
  ('MultipleVars -> empty','MultipleVars',1,'p_MultipleVars','main.py',307),
  ('type -> INT','type',1,'p_type','main.py',312),
  ('type -> CHAR','type',1,'p_type','main.py',313),
  ('type -> FLOAT','type',1,'p_type','main.py',314),
  ('arr -> LBRACKET CTEI RBRACKET','arr',3,'p_arr','main.py',319),
  ('arr -> LBRACKET exp RBRACKET','arr',3,'p_arr','main.py',320),
  ('functions -> FUNCTION type ID LPAREN args RPAREN vars LCURLY statements return exp SEMMICOLON RCURLY','functions',13,'p_functions','main.py',327),
  ('functions -> FUNCTION VOID ID LPAREN args RPAREN vars LCURLY statements RCURLY','functions',10,'p_functions','main.py',328),
  ('functions -> empty','functions',1,'p_functions','main.py',329),
  ('args -> type TWOPOINTS ID MultipleArgs','args',4,'p_args','main.py',334),
  ('args -> empty','args',1,'p_args','main.py',335),
  ('MultipleArgs -> COMMA args','MultipleArgs',2,'p_MultipleArgs','main.py',340),
  ('MultipleArgs -> empty','MultipleArgs',1,'p_MultipleArgs','main.py',341),
  ('return -> RETURN exp SEMMICOLON','return',3,'p_return','main.py',346),
  ('empty -> <empty>','empty',0,'p_empty','main.py',357),
]
